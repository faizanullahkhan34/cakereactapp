{"ast":null,"code":"var _jsxFileName = \"/home/faizan/Desktop/my-apps-folder/new-react-app/src/components/Search.js\",\n    _s = $RefreshSig$();\n\nimport querystring from 'query-string';\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Cake from \"./Cake\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = props => {\n  _s();\n\n  const query = querystring.parse(props.location.search);\n  const [cakes, getCakes] = useState([]);\n  useEffect(() => {\n    axios({\n      url: process.env.REACT_APP_API_BASE_URL + '/searchcakes?q=' + query.q,\n      method: 'get'\n    }).then(res => {\n      const cakeList = res.data.data;\n      getCakes(cakeList);\n    }, err => {});\n  }, [query.q]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      marginTop: \"100px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Showing search results of: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'red'\n        },\n        children: query.q\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: cakes.map((each, index) => {\n        return /*#__PURE__*/_jsxDEV(Cake, {\n          data: each,\n          page: \"search\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Search, \"v5PXKdf72WD1Wlpq7OBV18tPP+Q=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/faizan/Desktop/my-apps-folder/new-react-app/src/components/Search.js"],"names":["querystring","useEffect","useState","axios","Cake","Search","props","query","parse","location","search","cakes","getCakes","url","process","env","REACT_APP_API_BASE_URL","q","method","then","res","cakeList","data","err","marginTop","color","map","each","index"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,cAAxB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AACA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAMC,KAAK,GAAGP,WAAW,CAACQ,KAAZ,CAAkBF,KAAK,CAACG,QAAN,CAAeC,MAAjC,CAAd;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAAC;AACFU,MAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,sBAAZ,GAAoC,iBAApC,GAAsDT,KAAK,CAACU,CAD/D;AAEFC,MAAAA,MAAM,EAAE;AAFN,KAAD,CAAL,CAGGC,IAHH,CAGQC,GAAG,IAAI;AACX,YAAMC,QAAQ,GAAGD,GAAG,CAACE,IAAJ,CAASA,IAA1B;AACAV,MAAAA,QAAQ,CAACS,QAAD,CAAR;AACH,KAND,EAMGE,GAAG,IAAI,CACT,CAPD;AAQH,GATQ,EASN,CAAChB,KAAK,CAACU,CAAP,CATM,CAAT;AAWA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAE;AAACO,MAAAA,SAAS,EAAE;AAAZ,KAAlC;AAAA,4BACI;AAAA,6DAA+B;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAG;AAAT,SAAb;AAAA,kBAA+BlB,KAAK,CAACU;AAArC;AAAA;AAAA;AAAA;AAAA,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBAEQN,KAAK,CAACe,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACvB,4BACI,QAAC,IAAD;AAAM,UAAA,IAAI,EAAED,IAAZ;AAA8B,UAAA,IAAI,EAAC;AAAnC,WAAuBC,KAAvB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGH,OAJD;AAFR;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA7BD;;GAAMvB,M;;KAAAA,M;AA+BN,eAAeA,MAAf","sourcesContent":["import querystring from 'query-string';\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Cake from \"./Cake\";\nconst Search = (props) => {\n    const query = querystring.parse(props.location.search);\n    const [cakes, getCakes] = useState([]);\n\n    useEffect(() => {\n        axios({\n            url: process.env.REACT_APP_API_BASE_URL +'/searchcakes?q='+query.q,\n            method: 'get'\n        }).then(res => {\n            const cakeList = res.data.data\n            getCakes(cakeList);\n        }, err => {\n        })\n    }, [query.q])\n\n    return (\n        <div className=\"container\" style={{marginTop: \"100px\"}}>\n            <h4>Showing search results of: <span style={{color : 'red'}}>{query.q}</span></h4>\n            <div className=\"row\">\n                {\n                    cakes.map((each, index) => {\n                        return (\n                            <Cake data={each} key={index} page=\"search\"/>\n                        )\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Search"]},"metadata":{},"sourceType":"module"}