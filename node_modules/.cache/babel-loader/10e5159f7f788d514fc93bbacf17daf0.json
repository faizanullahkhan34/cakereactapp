{"ast":null,"code":"import { call, takeEvery, put, all } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nconst addCake = action => {\n  return axios({\n    url: process.env.REACT_APP_API_BASE_URL + '/addcake',\n    method: \"post\",\n    data: action.payload || {}\n  });\n};\n\nexport function* AddCakeGenerator(action, props) {\n  let result = yield call(addCake, action);\n\n  if (result.data) {\n    window.location.reload();\n    yield put({\n      type: \"ADD_CAKE_SUCCESS\",\n      payload: result.data\n    });\n  } else {\n    yield put({\n      type: \"ADD_CAKE_FAILURE\"\n    });\n  }\n}\n_c = AddCakeGenerator;\n\nfunction* AddCakeSaga() {\n  yield takeEvery('ADD_CAKE', AddCakeGenerator);\n}\n\n_c2 = AddCakeSaga;\nexport default function* MainSaga() {\n  yield all([AddCakeSaga()]);\n}\n_c3 = MainSaga;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"AddCakeGenerator\");\n$RefreshReg$(_c2, \"AddCakeSaga\");\n$RefreshReg$(_c3, \"MainSaga\");","map":{"version":3,"sources":["/home/faizan/Desktop/my-apps-folder/new-react-app/src/reduxstore/sagas.js"],"names":["call","takeEvery","put","all","axios","addCake","action","url","process","env","REACT_APP_API_BASE_URL","method","data","payload","AddCakeGenerator","props","result","window","location","reload","type","AddCakeSaga","MainSaga"],"mappings":"AAAA,SAAQA,IAAR,EAAcC,SAAd,EAAyBC,GAAzB,EAA8BC,GAA9B,QAAwC,oBAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAIC,MAAD,IAAY;AACxB,SAAOF,KAAK,CAAC;AACTG,IAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,sBAAZ,GAAqC,UADjC;AAETC,IAAAA,MAAM,EAAE,MAFC;AAGTC,IAAAA,IAAI,EAAEN,MAAM,CAACO,OAAP,IAAkB;AAHf,GAAD,CAAZ;AAKH,CAND;;AAQA,OAAO,UAAUC,gBAAV,CAA2BR,MAA3B,EAAmCS,KAAnC,EAA0C;AAC7C,MAAIC,MAAM,GAAG,MAAMhB,IAAI,CAACK,OAAD,EAAUC,MAAV,CAAvB;;AACA,MAAIU,MAAM,CAACJ,IAAX,EAAiB;AACbK,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACA,UAAMjB,GAAG,CAAC;AACNkB,MAAAA,IAAI,EAAE,kBADA;AAENP,MAAAA,OAAO,EAAEG,MAAM,CAACJ;AAFV,KAAD,CAAT;AAIH,GAND,MAMO;AACH,UAAMV,GAAG,CAAC;AACNkB,MAAAA,IAAI,EAAE;AADA,KAAD,CAAT;AAGH;AACJ;KAbgBN,gB;;AAejB,UAAUO,WAAV,GAAwB;AACpB,QAAMpB,SAAS,CAAC,UAAD,EAAaa,gBAAb,CAAf;AACH;;MAFSO,W;AAGV,eAAe,UAAUC,QAAV,GAAqB;AAChC,QAAMnB,GAAG,CAAC,CAACkB,WAAW,EAAZ,CAAD,CAAT;AACH;MAFwBC,Q","sourcesContent":["import {call, takeEvery, put, all} from \"redux-saga/effects\"\nimport axios from \"axios\";\n\nconst addCake = (action) => {\n    return axios({\n        url: process.env.REACT_APP_API_BASE_URL + '/addcake',\n        method: \"post\",\n        data: action.payload || {}\n    })\n}\n\nexport function *AddCakeGenerator(action, props) {\n    let result = yield(call(addCake, action))\n    if (result.data) {\n        window.location.reload()\n        yield put({\n            type: \"ADD_CAKE_SUCCESS\",\n            payload: result.data\n        })\n    } else {\n        yield put({\n            type: \"ADD_CAKE_FAILURE\"\n        })\n    }\n}\n\nfunction *AddCakeSaga() {\n    yield takeEvery('ADD_CAKE', AddCakeGenerator)\n}\nexport default function *MainSaga() {\n    yield all([AddCakeSaga()])\n}"]},"metadata":{},"sourceType":"module"}