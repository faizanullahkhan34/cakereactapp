{"ast":null,"code":"const AuthReducer = (state = {\n  isLoggedIn: !!localStorage.token,\n  username: localStorage.getItem('userData') ? JSON.parse(localStorage.getItem('userData')).name : undefined,\n  token: localStorage.token,\n  isLoading: false\n}, action) => {\n  switch (action.type) {\n    case \"LOGIN_SUCCESS\":\n      {\n        var _action$payload, _action$payload2;\n\n        state = { ...state\n        };\n        state['token'] = (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.token;\n        state['isLoggedIn'] = true;\n        state['username'] = (_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.username;\n        state['isLoading'] = true;\n        return state;\n      }\n\n    case \"LOGIN_FAIL\":\n      {\n        state = { ...state\n        };\n        state['isLoading'] = false;\n        return state;\n      }\n\n    case \"LOGOUT\":\n      {\n        state = { ...state\n        };\n        state['token'] = localStorage.clear();\n        state['isLoggedIn'] = false;\n        state['username'] = undefined;\n        return state;\n      }\n\n    default:\n      return state;\n  }\n};\n\n_c = AuthReducer;\nexport default AuthReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthReducer\");","map":{"version":3,"sources":["/home/faizan/Desktop/my-apps-folder/new-react-app/src/reduxstore/AuthReducer.js"],"names":["AuthReducer","state","isLoggedIn","localStorage","token","username","getItem","JSON","parse","name","undefined","isLoading","action","type","payload","clear"],"mappings":"AAAA,MAAMA,WAAW,GAAG,CAACC,KAAK,GAAG;AACzBC,EAAAA,UAAU,EAAE,CAAC,CAACC,YAAY,CAACC,KADF;AAEzBC,EAAAA,QAAQ,EAAEF,YAAY,CAACG,OAAb,CAAqB,UAArB,IAAoCC,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACG,OAAb,CAAqB,UAArB,CAAX,CAAD,CAA+CG,IAAlF,GAAyFC,SAF1E;AAGzBN,EAAAA,KAAK,EAAED,YAAY,CAACC,KAHK;AAIzBO,EAAAA,SAAS,EAAE;AAJc,CAAT,EAKjBC,MALiB,KAKN;AACV,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,eAAL;AAAuB;AAAA;;AACnBZ,QAAAA,KAAK,GAAG,EAAC,GAAGA;AAAJ,SAAR;AACAA,QAAAA,KAAK,CAAC,OAAD,CAAL,sBAAiBW,MAAM,CAACE,OAAxB,oDAAiB,gBAAgBV,KAAjC;AACAH,QAAAA,KAAK,CAAC,YAAD,CAAL,GAAsB,IAAtB;AACAA,QAAAA,KAAK,CAAC,UAAD,CAAL,uBAAoBW,MAAM,CAACE,OAA3B,qDAAoB,iBAAgBT,QAApC;AACAJ,QAAAA,KAAK,CAAC,WAAD,CAAL,GAAqB,IAArB;AACA,eAAOA,KAAP;AACH;;AACD,SAAK,YAAL;AAAoB;AAChBA,QAAAA,KAAK,GAAG,EAAC,GAAGA;AAAJ,SAAR;AACAA,QAAAA,KAAK,CAAC,WAAD,CAAL,GAAqB,KAArB;AACA,eAAOA,KAAP;AACH;;AACD,SAAK,QAAL;AAAgB;AACZA,QAAAA,KAAK,GAAG,EAAC,GAAGA;AAAJ,SAAR;AACAA,QAAAA,KAAK,CAAC,OAAD,CAAL,GAAiBE,YAAY,CAACY,KAAb,EAAjB;AACAd,QAAAA,KAAK,CAAC,YAAD,CAAL,GAAsB,KAAtB;AACAA,QAAAA,KAAK,CAAC,UAAD,CAAL,GAAoBS,SAApB;AACA,eAAOT,KAAP;AACH;;AACD;AAAU,aAAOA,KAAP;AArBd;AAuBH,CA7BD;;KAAMD,W;AA+BN,eAAeA,WAAf","sourcesContent":["const AuthReducer = (state = {\n    isLoggedIn: !!localStorage.token,\n    username: localStorage.getItem('userData') ? (JSON.parse(localStorage.getItem('userData'))).name : undefined,\n    token: localStorage.token,\n    isLoading: false\n}, action) => {\n    switch (action.type) {\n        case \"LOGIN_SUCCESS\" : {\n            state = {...state}\n            state['token'] = action.payload?.token\n            state['isLoggedIn'] = true\n            state['username'] = action.payload?.username\n            state['isLoading'] = true\n            return state\n        }\n        case \"LOGIN_FAIL\" : {\n            state = {...state}\n            state['isLoading'] = false\n            return state\n        }\n        case \"LOGOUT\" : {\n            state = {...state}\n            state['token'] = localStorage.clear()\n            state['isLoggedIn'] = false\n            state['username'] = undefined\n            return state\n        }\n        default : return state\n    }\n}\n\nexport default AuthReducer"]},"metadata":{},"sourceType":"module"}