{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport AuthReducer from \"./AuthReducer\";\nimport CartReducer from \"./CartReducer\";\nimport thunk from \"redux-thunk\";\nimport createSaga from \"redux-saga\";\nimport MainSaga from \"./sagas\";\n\nlet middle = store => next => action => {\n  let currentDate = new Date();\n  console.log(JSON.stringify(action.type), 'action is dispatched at: ', currentDate);\n  next(action);\n};\n\nlet sagMiddleware = createSaga();\nlet reducers = combineReducers({\n  AuthReducer,\n  CartReducer\n});\nlet store = createStore(reducers, applyMiddleware(middle, thunk, sagMiddleware));\nsagMiddleware.run(MainSaga);\nexport default store;","map":{"version":3,"sources":["/home/faizan/Desktop/my-apps-folder/new-react-app/src/reduxstore/store.js"],"names":["createStore","combineReducers","applyMiddleware","AuthReducer","CartReducer","thunk","createSaga","MainSaga","middle","store","next","action","currentDate","Date","console","log","JSON","stringify","type","sagMiddleware","reducers","run"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,QAAP,MAAqB,SAArB;;AAGA,IAAIC,MAAM,GAAGC,KAAK,IAAIC,IAAI,IAAIC,MAAM,IAAI;AACpC,MAAIC,WAAW,GAAG,IAAIC,IAAJ,EAAlB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeN,MAAM,CAACO,IAAtB,CAAZ,EAA0C,2BAA1C,EAAuEN,WAAvE;AACAF,EAAAA,IAAI,CAACC,MAAD,CAAJ;AACH,CAJD;;AAMA,IAAIQ,aAAa,GAAGb,UAAU,EAA9B;AAEA,IAAIc,QAAQ,GAAGnB,eAAe,CAAC;AAACE,EAAAA,WAAD;AAAcC,EAAAA;AAAd,CAAD,CAA9B;AACA,IAAIK,KAAK,GAAGT,WAAW,CAACoB,QAAD,EAAWlB,eAAe,CAACM,MAAD,EAASH,KAAT,EAAgBc,aAAhB,CAA1B,CAAvB;AAEAA,aAAa,CAACE,GAAd,CAAkBd,QAAlB;AAEA,eAAeE,KAAf","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from \"redux\";\nimport AuthReducer from \"./AuthReducer\";\nimport CartReducer from \"./CartReducer\";\nimport thunk from \"redux-thunk\";\nimport createSaga from \"redux-saga\"\nimport MainSaga from \"./sagas\";\n\n\nlet middle = store => next => action => {\n    let currentDate = new Date()\n    console.log(JSON.stringify(action.type) , 'action is dispatched at: ', currentDate)\n    next(action)\n}\n\nlet sagMiddleware = createSaga()\n\nlet reducers = combineReducers({AuthReducer, CartReducer})\nlet store = createStore(reducers, applyMiddleware(middle, thunk, sagMiddleware))\n\nsagMiddleware.run(MainSaga)\n\nexport default store"]},"metadata":{},"sourceType":"module"}