{"ast":null,"code":"var _jsxFileName = \"/home/faizan/Desktop/my-apps-folder/new-react-app/src/components/Cakelist.js\",\n    _s = $RefreshSig$();\n\nimport Cake from './Cake';\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Footer from './Footer';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport ReactPaginate from \"react-paginate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cakelist = props => {\n  _s();\n\n  const [cakes, getCakes] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  const [sortDown, setSortDown] = useState(true);\n  const [offset, setOffset] = useState(0);\n  const [perPage] = useState(8);\n  const [pageCount, setPageCount] = useState(0);\n  const [slice, setSlice] = useState([]);\n  useEffect(() => {\n    axios({\n      url: process.env.REACT_APP_API_BASE_URL + '/allcakes',\n      method: 'get'\n    }).then(res => {\n      const cakeList = res.data.data;\n      getCakes(cakeList);\n      setLoading(false);\n    }, err => {\n      setLoading(false);\n    });\n  }, []);\n  useEffect(() => {\n    if (localStorage.getItem('token')) {\n      axios({\n        url: process.env.REACT_APP_API_BASE_URL + '/cakecart',\n        method: 'post'\n      }).then(res => {\n        const cakeList = res.data.data;\n        props.dispatch({\n          type: \"SHOW_CART\",\n          payload: {\n            data: cakeList\n          }\n        });\n      }, err => {});\n    }\n  }, []);\n\n  const getSortHigh = () => {\n    const copy = [...cakes]; // create copy of cases array (new array is created each time function is called)\n\n    copy.sort((a, b) => b.price - a.price); // mutate copy array\n\n    setSortDown(!sortDown); // set new value for sortDown\n\n    getCakes(copy); // pass array to setCases\n  };\n\n  const getSortLow = () => {\n    const copy = [...cakes]; // create copy of cases array (new array is created each time function is called)\n\n    copy.sort((a, b) => a.price - b.price); // mutate copy array\n\n    setSortDown(!sortDown); // set new value for sortDown\n\n    getCakes(copy); // pass array to setCases\n  };\n\n  const onSorting = e => {\n    let term = 'Title';\n    let option = e.target.value;\n\n    if (option == 'high') {\n      const copy = [...cakes]; // create copy of cases array (new array is created each time function is called)\n\n      copy.sort((a, b) => b.price - a.price); // mutate copy array\n\n      setSortDown(!sortDown); // set new value for sortDown\n\n      getCakes(copy); // pass array to setCases\n    } else {\n      const copy = [...cakes]; // create copy of cases array (new array is created each time function is called)\n\n      copy.sort((a, b) => a.price - b.price); // mutate copy array\n\n      setSortDown(!sortDown); // set new value for sortDown\n\n      getCakes(copy); // pass array to setCases\n    }\n  };\n\n  const handlePageClick = e => {\n    // alert(e.selected)\n    const selectedPage = e.selected;\n    setOffset(selectedPage);\n  };\n\n  useEffect(() => {\n    if (cakes.length < 8) {\n      const copy = [...cakes];\n      setSlice(copy);\n      return;\n    }\n\n    setSlice(cakes.slice(offset * perPage, perPage * (offset + 1)));\n  }, [offset, cakes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      style: {\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: \"  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: onSorting,\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \" Sort By Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"high\",\n              children: \"High to Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"low\",\n              children: \"Low to High\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row col-md-12\",\n      style: {\n        marginTop: '20px'\n      },\n      children: [cakes.map((each, index) => {\n        return /*#__PURE__*/_jsxDEV(Cake, {\n          data: each,\n          page: \"list\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this);\n      }), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://i.gifer.com/YCZH.gif\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n        previousLabel: \"prev\",\n        nextLabel: \"next\",\n        breakLabel: \"...\",\n        breakClassName: \"break-me\",\n        pageCount: Math.ceil(cakes.length / perPage),\n        marginPagesDisplayed: 2,\n        pageRangeDisplayed: 5,\n        onPageChange: handlePageClick,\n        containerClassName: \"pagination\",\n        subContainerClassName: \"pages pagination\",\n        activeClassName: \"active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Cakelist, \"xFg7u+U7dL5IyeJP59wIzqdxbxA=\");\n\n_c = Cakelist;\nexport default connect()(withRouter(Cakelist));\n\nvar _c;\n\n$RefreshReg$(_c, \"Cakelist\");","map":{"version":3,"sources":["/home/faizan/Desktop/my-apps-folder/new-react-app/src/components/Cakelist.js"],"names":["Cake","axios","useEffect","useState","connect","withRouter","Footer","FontAwesomeIcon","ReactPaginate","Cakelist","props","cakes","getCakes","isLoading","setLoading","sortDown","setSortDown","offset","setOffset","perPage","pageCount","setPageCount","slice","setSlice","url","process","env","REACT_APP_API_BASE_URL","method","then","res","cakeList","data","err","localStorage","getItem","dispatch","type","payload","getSortHigh","copy","sort","a","b","price","getSortLow","onSorting","e","term","option","target","value","handlePageClick","selectedPage","selected","length","marginTop","map","each","index","Math","ceil"],"mappings":"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","sourcesContent":["import Cake from './Cake'\nimport axios from \"axios\";\nimport {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router-dom\";\nimport Footer from './Footer';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport ReactPaginate from \"react-paginate\";\n\nconst Cakelist = (props) => {\n    const [cakes, getCakes] = useState([]);\n    const [isLoading, setLoading] = useState(true);\n    const [sortDown, setSortDown] = useState(true);\n    const [offset, setOffset] = useState(0);\n    const [perPage] = useState(8);\n    const [pageCount, setPageCount] = useState(0);\n    const  [slice, setSlice] = useState([]);\n\n    useEffect(() => {\n        axios({\n            url: process.env.REACT_APP_API_BASE_URL +'/allcakes',\n            method: 'get'\n        }).then(res => {\n            const cakeList = res.data.data\n            getCakes(cakeList);\n            setLoading(false)\n        }, err => {\n            setLoading(false)\n        })\n    }, [])\n\n    useEffect(() => {\n        if (localStorage.getItem('token')) {\n            axios({\n                url: process.env.REACT_APP_API_BASE_URL + '/cakecart',\n                method: 'post',\n            }).then(res => {\n                const cakeList = res.data.data\n                props.dispatch({\n                    type: \"SHOW_CART\",\n                    payload: {\n                        data: cakeList\n                    }\n                })\n            }, err => {\n            })\n        }\n    }, [])\n\n    const getSortHigh = () =>{\n        const copy = [...cakes] // create copy of cases array (new array is created each time function is called)\n        copy.sort((a, b) => b.price - a.price) // mutate copy array\n        setSortDown(!sortDown); // set new value for sortDown\n        getCakes(copy); // pass array to setCases\n    }\n\n    const getSortLow = () =>{\n        const copy = [...cakes] // create copy of cases array (new array is created each time function is called)\n        copy.sort((a, b) => a.price - b.price) // mutate copy array\n        setSortDown(!sortDown); // set new value for sortDown\n        getCakes(copy); // pass array to setCases\n    }\n    \n   const onSorting = (e) => {\n        let term = 'Title';\n        let option = e.target.value;\n        if(option=='high') {\n\n        const copy = [...cakes] // create copy of cases array (new array is created each time function is called)\n        copy.sort((a, b) => b.price - a.price) // mutate copy array\n        setSortDown(!sortDown); // set new value for sortDown\n        getCakes(copy); // pass array to setCases\n\n\n        }\n        else {\n\n        const copy = [...cakes] // create copy of cases array (new array is created each time function is called)\n        copy.sort((a, b) => a.price - b.price) // mutate copy array\n        setSortDown(!sortDown); // set new value for sortDown\n        getCakes(copy); // pass array to setCases\n\n        }\n    }\n\n    const handlePageClick = (e) => {\n        // alert(e.selected)\n         const selectedPage = e.selected;\n         setOffset(selectedPage);\n       };\n \n       useEffect(() => {\n           if( cakes.length<8){\n            const copy = [...cakes]  \n             setSlice(copy);\n             return;\n           }\n         setSlice(cakes.slice(offset*perPage, perPage*(offset+1)));\n       },[offset, cakes]);\n\n    return (\n        <div>\n          <div className=\"container-fluid\" style={{marginTop:'20px'}}>\n              <div className=\"row\">\n              <div className=\"col\"></div>\n              <div className=\"col\">  </div>\n              <div className=\"col\"></div>\n              <div className=\"col\"></div>\n              <div className=\"col\">  \n            <select onChange={onSorting} className=\"form-control\">\n                  <option value=\"\"> Sort By Price</option>\n                  <option value=\"high\">High to Low</option>\n                  <option value=\"low\">Low to High</option>\n               </select>\n               </div>\n               \n               </div>\n              </div> \n        <div className=\"row col-md-12\" style={{marginTop:'20px'}}>\n            \n            {\n                cakes.map((each, index) => {\n                    return (\n                        <Cake data={each} key={index} page=\"list\"/>\n                    )\n                })\n            }\n\n                { isLoading && <div> \n                    <img src=\"https://i.gifer.com/YCZH.gif\" /> \n            </div>\n            }\n<ReactPaginate\n                    previousLabel={\"prev\"}\n                    nextLabel={\"next\"}\n                    breakLabel={\"...\"}\n                    breakClassName={\"break-me\"}\n                    pageCount={ Math.ceil(cakes.length/perPage)}\n                    marginPagesDisplayed={2}\n                    pageRangeDisplayed={5}\n                    onPageChange={handlePageClick}\n                    containerClassName={\"pagination\"}\n                    subContainerClassName={\"pages pagination\"}\n                    activeClassName={\"active\"}/>\n\n            <Footer></Footer>\n        </div>\n        </div>\n    )\n}\n\nexport default connect() (withRouter(Cakelist))"]},"metadata":{},"sourceType":"module"}